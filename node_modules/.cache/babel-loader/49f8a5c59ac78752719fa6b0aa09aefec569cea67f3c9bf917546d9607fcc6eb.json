{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asdvl\\\\Desktop\\\\Github source folder\\\\src\\\\components\\\\RouteComponents\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MediumButton from '../MediumButton';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styling/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent the default form submission behavior\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Email: email,\n          Password: password\n        })\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        console.log('Login successful:', data);\n        // Save the token in localStorage or context/state management\n        // Navigate to the dashboard or home page upon successful login\n        navigate('/dashboard');\n      } else {\n        // Handle errors such as invalid credentials\n        console.error('Login failed:', data.message);\n        // Optionally set an error message in state and display it to the user\n      }\n    } catch (error) {\n      console.error('Login request failed:', error);\n      // Optionally set an error message in state and display it to the user\n    }\n  };\n\n  const navigateToRegister = () => {\n    navigate('/register');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MediumButton, {\n          id: \"loginButton\",\n          label: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"createAccount\",\n        onClick: navigateToRegister,\n        children: \"Don't have an account yet?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"H+iueE6ppXbrBS3eFHdSUQUe0Ps=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","MediumButton","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","Email","Password","data","json","status","console","log","error","message","navigateToRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","id","label","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asdvl/Desktop/Github source folder/src/components/RouteComponents/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport MediumButton from '../MediumButton';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../styling/Login.css'\r\n\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault(); // Prevent the default form submission behavior\r\n    try {\r\n      const response = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ Email: email, Password: password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.status === 200) {\r\n        console.log('Login successful:', data);\r\n        // Save the token in localStorage or context/state management\r\n        // Navigate to the dashboard or home page upon successful login\r\n        navigate('/dashboard');\r\n      } else {\r\n        // Handle errors such as invalid credentials\r\n        console.error('Login failed:', data.message);\r\n        // Optionally set an error message in state and display it to the user\r\n      }\r\n    } catch (error) {\r\n      console.error('Login request failed:', error);\r\n      // Optionally set an error message in state and display it to the user\r\n    }\r\n  };\r\n\r\n  const navigateToRegister = () => {\r\n    navigate('/register');\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"login\">\r\n        <h2>To Do List</h2>\r\n        <form onSubmit={handleLogin}>\r\n          {/* Email input */}\r\n          <input\r\n            className=\"input\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <br />\r\n          {/* Password input */}\r\n          <input\r\n            className=\"input\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <br />\r\n          {/* Login button */}\r\n          <MediumButton id=\"loginButton\" label=\"Login\" />\r\n        </form>\r\n        {/* Create account redirect */}\r\n        <p className=\"createAccount\" onClick={navigateToRegister}>\r\n          Don't have an account yet?\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}