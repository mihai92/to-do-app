{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asdvl\\\\Desktop\\\\Github source folder\\\\src\\\\components\\\\RouteComponents\\\\Personal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../styling/Personal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Personal = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  // Fetch tasks from backend\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const response = await fetch('/api/tasks'); // Replace with your actual API endpoint\n      const data = await response.json();\n      setTasks(data);\n    };\n    fetchTasks();\n  }, []);\n  const handleRemoveTask = index => {\n    // Create a new array without the task at the specified index\n    const updatedTasks = tasks.filter((_, taskIndex) => taskIndex !== index);\n    setTasks(updatedTasks);\n\n    // If needed, also send a request to your backend to delete the task\n  };\n\n  const handleAddTask = () => {\n    // Show the add task input and button\n    setShowAddTask(true);\n  };\n  const handleSaveNewTask = () => {\n    if (newTask.trim() !== \"\") {\n      // Save the new task to the backend and update the state\n      // This is where you would send a POST request to your API\n      // For now, we'll just add it to the existing tasks\n      setTasks([...tasks, newTask]);\n      setNewTask(\"\"); // Clear the input\n      setShowAddTask(false); // Hide the add task input and button\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"personal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"personal-header\",\n      children: \"Personal Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveTask(index),\n          className: \"remove-task-btn\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Mediumbutton, {\n      onClick: handleAddTask,\n      className: \"add-task-button\",\n      children: \"Add new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveNewTask,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Personal, \"iJmWEE0FI4NvbBTxLWTHVclYGxw=\");\n_c = Personal;\nexport default Personal;\nvar _c;\n$RefreshReg$(_c, \"Personal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Personal","_s","tasks","setTasks","newTask","setNewTask","showAddTask","setShowAddTask","fetchTasks","response","fetch","data","json","handleRemoveTask","index","updatedTasks","filter","_","taskIndex","handleAddTask","handleSaveNewTask","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","onClick","Mediumbutton","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/asdvl/Desktop/Github source folder/src/components/RouteComponents/Personal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../styling/Personal.css';\r\n\r\nconst Personal = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n\r\n  // Fetch tasks from backend\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const response = await fetch('/api/tasks'); // Replace with your actual API endpoint\r\n      const data = await response.json();\r\n      setTasks(data);\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleRemoveTask = (index) => {\r\n    // Create a new array without the task at the specified index\r\n    const updatedTasks = tasks.filter((_, taskIndex) => taskIndex !== index);\r\n    setTasks(updatedTasks);\r\n\r\n    // If needed, also send a request to your backend to delete the task\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    // Show the add task input and button\r\n    setShowAddTask(true);\r\n  };\r\n\r\n  const handleSaveNewTask = () => {\r\n    if (newTask.trim() !== \"\") {\r\n      // Save the new task to the backend and update the state\r\n      // This is where you would send a POST request to your API\r\n      // For now, we'll just add it to the existing tasks\r\n      setTasks([...tasks, newTask]);\r\n      setNewTask(\"\"); // Clear the input\r\n      setShowAddTask(false); // Hide the add task input and button\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"personal\">\r\n      <div className=\"personal-header\">Personal Tasks</div>\r\n      <div className=\"tasks-container\">\r\n        {tasks.map((task, index) => (\r\n          <div key={index} className=\"task-item\">\r\n            <span>{task}</span>\r\n            <button onClick={() => handleRemoveTask(index)} className=\"remove-task-btn\">X</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Mediumbutton onClick={handleAddTask} className=\"add-task-button\">Add new task</Mediumbutton>\r\n      {showAddTask && (\r\n        <div className=\"new-task-window\">\r\n          <input\r\n            type=\"text\"\r\n            value={newTask}\r\n            onChange={(e) => setNewTask(e.target.value)}\r\n          />\r\n          <button onClick={handleSaveNewTask}>Done</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Personal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}