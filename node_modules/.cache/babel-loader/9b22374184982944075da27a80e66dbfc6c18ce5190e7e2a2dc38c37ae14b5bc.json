{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asdvl\\\\Desktop\\\\Github source folder\\\\src\\\\components\\\\MenuBar.js\";\nimport React from \"react\";\nimport '../styling/MenuBar.css';\nimport MenuButton from \"./MenuButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonsConfig = {\n  personal: ['Home', 'Group tasks', 'Message board'],\n  groups: ['Home', 'Personal', 'Messages', 'Create task'],\n  home: ['Personal', 'Groups', 'Messages'],\n  messages: ['Home', 'Groups', 'Personal']\n};\nconst MenuBar = ({\n  activePage,\n  setActivePage\n}) => {\n  console.log(activePage);\n  // Determine which buttons to show based on the activePage\n  const buttonsToShow = buttonsConfig[activePage] || [];\n  const handlePersonalClick = () => {\n    console.log('Personal clicked');\n    setActivePage('personal');\n  };\n  const handleGroupsClick = () => {\n    console.log('Groups clicked');\n    setActivePage('groups');\n  };\n  const handleHomeClick = () => {\n    console.log('Home clicked');\n    setActivePage('home');\n  };\n  const handleMessagesClick = () => {\n    console.log('Messages clicked');\n    setActivePage('messages');\n  };\n  const clickHandlers = {\n    Personal: handlePersonalClick,\n    Groups: handleGroupsClick,\n    Home: handleHomeClick,\n    Messages: handleMessagesClick\n    // More mappings for other buttons...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-styling\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), buttonsToShow.map(buttonLabel => /*#__PURE__*/_jsxDEV(MenuButton, {\n      label: buttonLabel,\n      onClick: clickHandlers[buttonLabel.replace(/\\s/g, \"\")]\n    }, buttonLabel, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_c = MenuBar;\nexport default MenuBar;\nvar _c;\n$RefreshReg$(_c, \"MenuBar\");","map":{"version":3,"names":["React","MenuButton","jsxDEV","_jsxDEV","buttonsConfig","personal","groups","home","messages","MenuBar","activePage","setActivePage","console","log","buttonsToShow","handlePersonalClick","handleGroupsClick","handleHomeClick","handleMessagesClick","clickHandlers","Personal","Groups","Home","Messages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","buttonLabel","label","onClick","replace","_c","$RefreshReg$"],"sources":["C:/Users/asdvl/Desktop/Github source folder/src/components/MenuBar.js"],"sourcesContent":["import React from \"react\";\r\nimport '../styling/MenuBar.css'\r\nimport MenuButton from \"./MenuButton\";\r\n\r\nconst buttonsConfig = {\r\n  personal: ['Home', 'Group tasks', 'Message board'],\r\n  groups: ['Home','Personal', 'Messages', 'Create task'],\r\n  home: ['Personal','Groups', 'Messages'],\r\n  messages: ['Home', 'Groups', 'Personal']\r\n};\r\n\r\n\r\n  const MenuBar = ({ activePage, setActivePage }) => {\r\n    console.log(activePage)\r\n    // Determine which buttons to show based on the activePage\r\n    const buttonsToShow = buttonsConfig[activePage] || [];\r\n\r\n    const handlePersonalClick = () => {\r\n      console.log('Personal clicked');\r\n      setActivePage('personal')\r\n    };\r\n    \r\n    const handleGroupsClick = () => {\r\n      console.log('Groups clicked');\r\n      setActivePage('groups')\r\n    };\r\n    const handleHomeClick = () => {\r\n      console.log('Home clicked');\r\n      setActivePage('home')\r\n    };\r\n    const handleMessagesClick = () => {\r\n      console.log('Messages clicked');\r\n      setActivePage('messages')\r\n    };\r\n    \r\n  \r\n  const clickHandlers = {\r\n      Personal: handlePersonalClick,\r\n      Groups: handleGroupsClick,\r\n      Home: handleHomeClick,\r\n      Messages: handleMessagesClick,\r\n      // More mappings for other buttons...\r\n    };\r\n  \r\n\r\n    return (\r\n      <div className=\"task-styling\">\r\n        <div className=\"profile\">Profile</div>\r\n        {buttonsToShow.map((buttonLabel) => (\r\n        <MenuButton\r\n          key={buttonLabel}\r\n          label={buttonLabel}\r\n          onClick={clickHandlers[buttonLabel.replace(/\\s/g, \"\")]}\r\n        />\r\n      ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default MenuBar;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAC/B,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAG;EACpBC,QAAQ,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,eAAe,CAAC;EAClDC,MAAM,EAAE,CAAC,MAAM,EAAC,UAAU,EAAE,UAAU,EAAE,aAAa,CAAC;EACtDC,IAAI,EAAE,CAAC,UAAU,EAAC,QAAQ,EAAE,UAAU,CAAC;EACvCC,QAAQ,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU;AACzC,CAAC;AAGC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EACjDC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EACvB;EACA,MAAMI,aAAa,GAAGV,aAAa,CAACM,UAAU,CAAC,IAAI,EAAE;EAErD,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;IAChCH,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BF,aAAa,CAAC,UAAU,CAAC;EAC3B,CAAC;EAED,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;IAC9BJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BF,aAAa,CAAC,QAAQ,CAAC;EACzB,CAAC;EACD,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5BL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BF,aAAa,CAAC,MAAM,CAAC;EACvB,CAAC;EACD,MAAMO,mBAAmB,GAAGA,CAAA,KAAM;IAChCN,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BF,aAAa,CAAC,UAAU,CAAC;EAC3B,CAAC;EAGH,MAAMQ,aAAa,GAAG;IAClBC,QAAQ,EAAEL,mBAAmB;IAC7BM,MAAM,EAAEL,iBAAiB;IACzBM,IAAI,EAAEL,eAAe;IACrBM,QAAQ,EAAEL;IACV;EACF,CAAC;;EAGD,oBACEf,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BtB,OAAA;MAAKqB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrCf,aAAa,CAACgB,GAAG,CAAEC,WAAW,iBAC/B5B,OAAA,CAACF,UAAU;MAET+B,KAAK,EAAED,WAAY;MACnBE,OAAO,EAAEd,aAAa,CAACY,WAAW,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAAE,GAFlDH,WAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEV,CAAC;AAACM,EAAA,GA7CI1B,OAAO;AA+Cf,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}