{"ast":null,"code":"var _jsxFileName = \"E:\\\\to-do-app\\\\src\\\\components\\\\MainContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\n// Sample initial data, this would be replaced by data from your backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = {\n  'to-do': ['Task 1', 'Task 2', 'Task 3'],\n  'in-progress': [],\n  'in-review': [],\n  'done': []\n};\nfunction MainContent() {\n  _s();\n  const [tasks, setTasks] = useState(initialTasks);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n\n    // Dropped outside the list\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      const newTaskList = Array.from(tasks[source.droppableId]);\n      const [relocatedItem] = newTaskList.splice(source.index, 1);\n      newTaskList.splice(destination.index, 0, relocatedItem);\n      setTasks({\n        ...tasks,\n        [source.droppableId]: newTaskList\n      });\n    } else {\n      const sourceList = Array.from(tasks[source.droppableId]);\n      const destinationList = Array.from(tasks[destination.droppableId]);\n      const [relocatedItem] = sourceList.splice(source.index, 1);\n      destinationList.splice(destination.index, 0, relocatedItem);\n      setTasks({\n        ...tasks,\n        [source.droppableId]: sourceList,\n        [destination.droppableId]: destinationList\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          height: '100%'\n        },\n        children: Object.keys(tasks).map(listId => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: listId,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            style: {\n              background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n              padding: 8,\n              width: 250,\n              minHeight: 500,\n              margin: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: listId.toUpperCase().replace(/-/g, ' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), tasks[listId].map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: {\n                  userSelect: 'none',\n                  padding: 16,\n                  margin: '0 0 8px 0',\n                  minHeight: '50px',\n                  backgroundColor: snapshot.isDragging ? '#263B4A' : '#456C86',\n                  color: 'white',\n                  ...provided.draggableProps.style\n                },\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this)\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, listId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }, this);\n}\n_s(MainContent, \"SvIK8d5WT9y/c+LCOG3LNPDmSmQ=\");\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","initialTasks","MainContent","_s","tasks","setTasks","onDragEnd","result","source","destination","droppableId","newTaskList","Array","from","relocatedItem","splice","index","sourceList","destinationList","className","children","style","display","justifyContent","height","Object","keys","map","listId","provided","snapshot","ref","innerRef","droppableProps","background","isDraggingOver","padding","width","minHeight","margin","toUpperCase","replace","fileName","_jsxFileName","lineNumber","columnNumber","item","draggableId","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","placeholder","_c","$RefreshReg$"],"sources":["E:/to-do-app/src/components/MainContent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n// Sample initial data, this would be replaced by data from your backend\r\nconst initialTasks = {\r\n  'to-do': ['Task 1', 'Task 2', 'Task 3'],\r\n  'in-progress': [],\r\n  'in-review': [],\r\n  'done': [],\r\n};\r\n\r\nfunction MainContent() {\r\n  const [tasks, setTasks] = useState(initialTasks);\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    // Dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      const newTaskList = Array.from(tasks[source.droppableId]);\r\n      const [relocatedItem] = newTaskList.splice(source.index, 1);\r\n      newTaskList.splice(destination.index, 0, relocatedItem);\r\n\r\n      setTasks({\r\n        ...tasks,\r\n        [source.droppableId]: newTaskList,\r\n      });\r\n    } else {\r\n      const sourceList = Array.from(tasks[source.droppableId]);\r\n      const destinationList = Array.from(tasks[destination.droppableId]);\r\n      const [relocatedItem] = sourceList.splice(source.index, 1);\r\n\r\n      destinationList.splice(destination.index, 0, relocatedItem);\r\n\r\n      setTasks({\r\n        ...tasks,\r\n        [source.droppableId]: sourceList,\r\n        [destination.droppableId]: destinationList,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (<div className='main-content'>\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div style={{ display: 'flex', justifyContent: 'center', height: '100%' }}>\r\n        {Object.keys(tasks).map((listId) => (\r\n          <Droppable droppableId={listId} key={listId}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                style={{\r\n                  background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\r\n                  padding: 8,\r\n                  width: 250,\r\n                  minHeight: 500,\r\n                  margin: 8,\r\n                }}\r\n              >\r\n                <h2>{listId.toUpperCase().replace(/-/g, ' ')}</h2>\r\n                {tasks[listId].map((item, index) => (\r\n                  <Draggable key={item} draggableId={item} index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={{\r\n                          userSelect: 'none',\r\n                          padding: 16,\r\n                          margin: '0 0 8px 0',\r\n                          minHeight: '50px',\r\n                          backgroundColor: snapshot.isDragging ? '#263B4A' : '#456C86',\r\n                          color: 'white',\r\n                          ...provided.draggableProps.style,\r\n                        }}\r\n                      >\r\n                        {item}\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        ))}\r\n      </div>\r\n    </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}