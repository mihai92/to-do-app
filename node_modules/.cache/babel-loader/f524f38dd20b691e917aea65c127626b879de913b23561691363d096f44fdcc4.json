{"ast":null,"code":"var _jsxFileName = \"E:\\\\to-do-app\\\\src\\\\components\\\\TaskName.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableSpan = ({\n  text,\n  onTextChange\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editableText, setEditableText] = useState(text);\n  const handleSpanClick = () => {\n    setIsEditing(true);\n  };\n  const handleInputChange = e => {\n    setEditableText(e.target.value);\n  };\n  const handleInputBlur = () => {\n    setIsEditing(false);\n    onTextChange(editableText);\n  };\n  const handleInputKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleInputBlur();\n    }\n  };\n  return isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: editableText,\n    onChange: handleInputChange,\n    onBlur: handleInputBlur,\n    onKeyDown: handleInputKeyDown,\n    autoFocus: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: handleSpanClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n_s(EditableSpan, \"jMp/rIU2F1nQyssBQvcitBLUOiY=\");\n_c = EditableSpan;\nexport default EditableSpan;\nvar _c;\n$RefreshReg$(_c, \"EditableSpan\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditableSpan","text","onTextChange","_s","isEditing","setIsEditing","editableText","setEditableText","handleSpanClick","handleInputChange","e","target","value","handleInputBlur","handleInputKeyDown","key","type","onChange","onBlur","onKeyDown","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","onClick","children","_c","$RefreshReg$"],"sources":["E:/to-do-app/src/components/TaskName.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst EditableSpan = ({ text, onTextChange }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editableText, setEditableText] = useState(text);\r\n  \r\n    const handleSpanClick = () => {\r\n      setIsEditing(true);\r\n    };\r\n  \r\n    const handleInputChange = (e) => {\r\n      setEditableText(e.target.value);\r\n    };\r\n  \r\n    const handleInputBlur = () => {\r\n      setIsEditing(false);\r\n      onTextChange(editableText);\r\n    };\r\n  \r\n    const handleInputKeyDown = (e) => {\r\n      if (e.key === \"Enter\") {\r\n        handleInputBlur();\r\n      }\r\n    };\r\n  \r\n    return isEditing ? (\r\n      <input\r\n        type=\"text\"\r\n        value={editableText}\r\n        onChange={handleInputChange}\r\n        onBlur={handleInputBlur}\r\n        onKeyDown={handleInputKeyDown}\r\n        autoFocus\r\n      />\r\n    ) : (\r\n      <span onClick={handleSpanClick}>{text}</span>\r\n    );\r\n  };\r\n\r\n  export default EditableSpan;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAACI,IAAI,CAAC;EAEtD,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5BH,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMI,iBAAiB,GAAIC,CAAC,IAAK;IAC/BH,eAAe,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BR,YAAY,CAAC,KAAK,CAAC;IACnBH,YAAY,CAACI,YAAY,CAAC;EAC5B,CAAC;EAED,MAAMQ,kBAAkB,GAAIJ,CAAC,IAAK;IAChC,IAAIA,CAAC,CAACK,GAAG,KAAK,OAAO,EAAE;MACrBF,eAAe,CAAC,CAAC;IACnB;EACF,CAAC;EAED,OAAOT,SAAS,gBACdL,OAAA;IACEiB,IAAI,EAAC,MAAM;IACXJ,KAAK,EAAEN,YAAa;IACpBW,QAAQ,EAAER,iBAAkB;IAC5BS,MAAM,EAAEL,eAAgB;IACxBM,SAAS,EAAEL,kBAAmB;IAC9BM,SAAS;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC,gBAEFzB,OAAA;IAAM0B,OAAO,EAAEjB,eAAgB;IAAAkB,QAAA,EAAEzB;EAAI;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAC7C;AACH,CAAC;AAACrB,EAAA,CAnCEH,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAqChB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}